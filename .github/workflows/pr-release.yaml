name: 'PR Release'

on:
  workflow_dispatch:
    inputs:
      pr_id:
        description: 'Pull request ID'
        required: true
      job_to_run:
        description: 'Job to run'
        required: true
        default: 'release'
<<<<<<< HEAD
        type: choice
=======
        type: 'choice'
>>>>>>> 327b756a22e5152d8617eec60c6916aeb8b09e51
        options:
        - 'release'
        - 'clean-tag-dev'
        - 'clean-tag-next'
        - 'clean-tag-pr'
  pull_request:
    types: [closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  OWNER: 'fuellabs'
  REPO: 'fuel-ui'
  PR_ID: ${{ github.event.pull_request.number || github.event.inputs.pr_id }}
  NPM_ORG: '@fuel-ui'

jobs:
  pr_info:
    name: Fetching PR Head Ref
    runs-on: ubuntu-latest
<<<<<<< HEAD
=======
    if: github.event_name == 'workflow_dispatch'
>>>>>>> 327b756a22e5152d8617eec60c6916aeb8b09e51
    outputs:
      ref: ${{ steps.pr_info.outputs.result }}
    steps:
      - uses: actions/github-script@v6
        id: pr_info
        with:
          result-encoding: string
          script: |
            const pr = await github.rest.pulls.get({
              owner: process.env.OWNER,
              repo: process.env.REPO,
              pull_number: process.env.PR_ID
            });
            return pr.data.head.ref

  validate_changeset:
    name: Validating Changeset
    needs: pr_info
<<<<<<< HEAD
    if: ${{ github.head_ref != 'changeset-release/master' }}
=======
    if: github.event_name == 'workflow_dispatch' && github.head_ref != 'changeset-release/master'
>>>>>>> 327b756a22e5152d8617eec60c6916aeb8b09e51
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.pr_info.outputs.ref }}

<<<<<<< HEAD
      - uses: FuelLabs/github-actions/setups/node@master

      - name: Validate Changeset
        run: pnpm changeset status --since=origin/main

=======
      - uses: ./.github/actions/setup-node
      - name: Validate Changeset
        run: pnpm changeset:check

>>>>>>> 327b756a22e5152d8617eec60c6916aeb8b09e51
  release_pr:
    name: 'Releasing packages'
    needs: [pr_info, validate_changeset]
    runs-on: ubuntu-latest
    permissions: write-all
<<<<<<< HEAD
    if: ${{ github.event.action != 'closed' || github.event.inputs.job_to_run == 'release' }}
=======
    if: github.event_name == 'workflow_dispatch' && github.event.action != 'closed' || github.event.inputs.job_to_run == 'release'
>>>>>>> 327b756a22e5152d8617eec60c6916aeb8b09e51
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.pr_info.outputs.ref }}

<<<<<<< HEAD
      - uses: FuelLabs/github-actions/setups/node@master
=======
      - uses: ./.github/actions/setup-node
>>>>>>> 327b756a22e5152d8617eec60c6916aeb8b09e51
      - uses: FuelLabs/github-actions/setups/npm@master
        with:
          npm-token: ${{ secrets.NPM_TOKEN }}

<<<<<<< HEAD
      - name: Release to @pr-<ID> tag on npm
        id: release
        run: |
=======
      - name: Build
        run: |
          pnpm lint:ci
          pnpm ts:check
          pnpm build


      - name: Release to @pr-<ID> tag on npm
        id: release
        run: |
          pnpm changeset:next
>>>>>>> 327b756a22e5152d8617eec60c6916aeb8b09e51
          pnpm changeset version --snapshot pr-${{ env.PR_ID }}
          echo ::set-output name=version::$(pnpm changeset publish --tag pr-${{ env.PR_ID }})
          git checkout .
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set published version
        run: |
          published_version=$(echo "${{ steps.release.outputs.version }}" | grep -oP -m 1 '${{ env.NPM_ORG }}/[^@]*@\K([0-9]+\.){2}[0-9]+-pr-${{ env.PR_ID }}-\w+')
          if [ -z "$published_version" ]; then
            echo "Error: Published version not found"
            exit 1
          fi
          echo "::set-output name=published_version::$published_version"
        id: set_version

      - name: Get release message
        id: get_message
        run: |
          echo ::set-output name=message::$(pnpm pr:release --action msg --version ${{ steps.set_version.outputs.published_version }} --pr ${{ env.PR_ID }})

      - uses: mshick/add-pr-comment@v2
        with:
          issue: ${{ env.PR_ID }}
          message-path: ./release-msg.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: git checkout .

  clean_releases:
    needs: validate_changeset
    name: 'Clean PR releases'
    runs-on: ubuntu-latest
<<<<<<< HEAD
    if: ${{ github.event.action == 'closed' }}
=======
    if: github.event_name == 'workflow_dispatch' && github.event.action == 'closed'
>>>>>>> 327b756a22e5152d8617eec60c6916aeb8b09e51
    steps:
      - name: Checkout
        uses: actions/checkout@v3

<<<<<<< HEAD
      - uses: FuelLabs/github-actions/setups/node@master
=======
      - uses: ./.github/actions/setup-node
>>>>>>> 327b756a22e5152d8617eec60c6916aeb8b09e51
      - uses: FuelLabs/github-actions/setups/npm@master
        with:
          npm-token: ${{ secrets.NPM_TOKEN }}

      - name: Delete published versions
        run: |
          # Pass the PR number as an argument to the pr:release script
          pnpm pr:release --pr ${{ env.PR_ID }} --action clean
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  delete_releases:
    name: 'Trigger to delete releases'
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.inputs.job_to_run, 'clean') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

<<<<<<< HEAD
      - uses: FuelLabs/github-actions/setups/node@master
=======
      - uses: ./.github/actions/setup-node
>>>>>>> 327b756a22e5152d8617eec60c6916aeb8b09e51
      - uses: FuelLabs/github-actions/setups/npm@master
        with:
          npm-token: ${{ secrets.NPM_TOKEN }}

      - name: Delete published versions
        run: |
          pnpm pr:release --clean ${{ github.event.inputs.job_to_run }} --action clean
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
