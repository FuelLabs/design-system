{"version":3,"file":"Grid-6e47ed83.js","sources":["../../src/components/Grid/GridItem.tsx","../../src/components/Grid/Grid.tsx"],"sourcesContent":["import type { ThemeUtilsCSS } from '@fuel-ui/css';\n\nimport type { HTMLProps } from '../../utils';\nimport { createComponent } from '../../utils';\nimport { Box } from '../Box';\n\nexport type GridItemProps = HTMLProps['div'] & {\n  /**\n   * Shorthand prop for `gridArea`\n   * @type ThemeUtilsCSS[\"gridArea\"];\n   */\n  area?: ThemeUtilsCSS['gridArea'];\n  /**\n   * The number of columns the grid item should `span`.\n   * @type number | \"auto\n   */\n  colSpan?: number | 'auto';\n  /**\n   * The column number the grid item should start.\n   * @type number | \"auto\n   */\n  colStart?: number | 'auto';\n  /**\n   * @type number | \"auto\n   */\n  colEnd?: number | 'auto';\n  /**\n   * @type number | \"auto\n   */\n  rowStart?: number | 'auto';\n  /**\n   * @type number | \"auto\n   */\n  rowEnd?: number | 'auto';\n  /**\n   * @type number | \"auto\n   */\n  rowSpan?: number | 'auto';\n};\n\nfunction spanFn(span?: number | 'auto') {\n  return span === 'auto' ? 'auto' : `span ${span}/span ${span}`;\n}\n\nexport const GridItem = createComponent<GridItemProps>(\n  ({\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    css,\n    ...props\n  }) => (\n    <Box\n      {...props}\n      css={{\n        gridArea: area,\n        gridColumn: spanFn(colSpan),\n        gridRow: spanFn(rowSpan),\n        gridColumnStart: colStart,\n        gridColumnEnd: colEnd,\n        gridRowStart: rowStart,\n        gridRowEnd: rowEnd,\n        ...css,\n      }}\n    />\n  )\n);\n","import type { ThemeUtilsCSS } from '@fuel-ui/css';\nimport { cx } from '@fuel-ui/css';\n\nimport type { HTMLProps } from '../../utils';\nimport { createComponent } from '../../utils';\nimport { Box } from '../Box';\n\nimport { GridItem } from './GridItem';\n\nexport type GridProps = HTMLProps['div'] & {\n  /**\n   * Shorthand prop for `gridAutoColumns`\n   * @type ThemeUtilsCSS[\"gridAutoColumns\"];\n   */\n  autoColumns?: ThemeUtilsCSS['gridAutoColumns'];\n  /**\n   * Shorthand prop for `gridAutoRows`\n   * @type ThemeUtilsCSS[\"gridAutoRows\"];\n   */\n  autoRows?: ThemeUtilsCSS['gridAutoRows'];\n  /**\n   * Shorthand prop for `gridColumn`\n   * @type ThemeUtilsCSS[\"gridColumn\"];\n   */\n  column?: ThemeUtilsCSS['gridColumn'];\n  /**\n   * Shorthand prop for `gridAutoFlow`\n   * @type ThemeUtilsCSS[\"gridAutoFlow\"];\n   */\n  direction?: ThemeUtilsCSS['gridAutoFlow'];\n  /**\n   * Shorthand prop for `gap`\n   * @type ThemeUtilsCSS[\"gap\"];\n   */\n  gap?: ThemeUtilsCSS['gap'];\n  /**\n   * Shorthand prop for `gridRow`\n   * @type ThemeUtilsCSS[\"gridRow\"];\n   */\n  row?: ThemeUtilsCSS['gridRow'];\n  /**\n   * Shorthand prop for `gridTemplateAreas`\n   * @type ThemeUtilsCSS[\"gridTemplateAreas\"];\n   */\n  templateAreas?: ThemeUtilsCSS['gridTemplateAreas'];\n  /**\n   * Shorthand prop for `gridTemplateColumns`\n   * @type ThemeUtilsCSS[\"gridTemplateColumns\"];\n   */\n  templateColumns?: ThemeUtilsCSS['gridTemplateColumns'];\n  /**\n   * Shorthand prop for `gridTemplateRows`\n   * @type ThemeUtilsCSS[\"gridTemplateRows\"];\n   */\n  templateRows?: ThemeUtilsCSS['gridTemplateRows'];\n};\n\ntype ObjProps = {\n  Item: typeof GridItem;\n};\n\nexport const Grid = createComponent<GridProps, ObjProps>(\n  ({\n    autoColumns,\n    autoRows,\n    column,\n    direction = 'row',\n    gap,\n    row,\n    templateAreas,\n    templateColumns,\n    templateRows,\n    css,\n    className,\n    ...props\n  }) => {\n    const classes = cx('fuel_BoxGrid', className);\n    return (\n      <Box\n        {...props}\n        className={classes}\n        css={{\n          gap,\n          gridAutoFlow: direction,\n          gridAutoColumns: autoColumns,\n          gridAutoRows: autoRows,\n          gridColumn: column,\n          gridRow: row,\n          gridTemplateAreas: templateAreas,\n          gridTemplateColumns: templateColumns,\n          gridTemplateRows: templateRows,\n          ...css,\n          display: 'grid',\n        }}\n      />\n    );\n  }\n);\n\nGrid.Item = GridItem;\n"],"names":["spanFn","span","GridItem","createComponent","area","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","css","props","jsx","Box","Grid","autoColumns","autoRows","column","direction","gap","row","templateAreas","templateColumns","templateRows","className","classes","cx"],"mappings":"yHAwCA,SAAAA,EAAAC,EAAA,CACE,OAAAA,IAAA,OAAA,OAAA,QAAAA,UAAAA,GACF,CAEO,MAAAC,EAAAC,EAAiB,CAAA,CACrB,KAAAC,EACC,QAAAC,EACA,SAAAC,EACA,OAAAC,EACA,OAAAC,EACA,QAAAC,EACA,SAAAC,EACA,IAAAC,EACA,GAAAC,CACG,IAAAC,EAEHC,EAAC,CAAA,GAAAF,EACK,IAAA,CACC,SAAAR,EACO,WAAAJ,EAAAK,CAAA,EACgB,QAAAL,EAAAS,CAAA,EACH,gBAAAH,EACN,cAAAC,EACF,aAAAG,EACD,WAAAF,EACF,GAAAG,CACT,CACL,CAAA,CAGN,wqCCTO,MAAAI,EAAAZ,EAAa,CAAA,CACjB,YAAAa,EACC,SAAAC,EACA,OAAAC,EACA,UAAAC,EAAA,MACY,IAAAC,EACZ,IAAAC,EACA,cAAAC,EACA,gBAAAC,EACA,aAAAC,EACA,IAAAb,EACA,UAAAc,EACA,GAAAb,CACG,IAAA,CAEH,MAAAc,EAAAC,EAAA,eAAAF,CAAA,EACA,OAAAZ,EACEC,EAAC,CAAA,GAAAF,EACK,UAAAc,EACO,IAAA,CACN,IAAAN,EACH,aAAAD,EACc,gBAAAH,EACG,aAAAC,EACH,WAAAC,EACF,QAAAG,EACH,kBAAAC,EACU,oBAAAC,EACE,iBAAAC,EACH,GAAAb,EACf,QAAA,MACM,CACX,CAAA,CACF,CAGN,EAEAI,EAAA,KAAAb"}