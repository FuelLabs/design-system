{"version":3,"file":"Text-385c8a0a.js","sources":["../../src/components/Text/Text.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { utils } from '@fuel-ui/css';\nimport { createElement } from 'react';\n\nimport {\n  _unstable_createComponent,\n  createPolymorphicComponent,\n} from '../../utils';\nimport { createIcon } from '../Button';\n\nimport type * as t from './defs';\n\nimport { Components } from '~/defs';\nimport { createStyle, useElementProps, useStyles } from '~/hooks';\n\nconst _Text = _unstable_createComponent<t.TextDef>(\n  Components.Text,\n  ({\n    as = 'p',\n    children,\n    iconSize = 16,\n    iconColor = 'textIcon',\n    leftIcon,\n    rightIcon,\n    leftIconAriaLabel,\n    rightIconAriaLabel,\n    css,\n    color = 'textColor',\n    ...props\n  }) => {\n    const iconLeft = createIcon(\n      leftIcon,\n      leftIconAriaLabel,\n      iconSize,\n      iconColor\n    );\n    const iconRight = createIcon(\n      rightIcon,\n      rightIconAriaLabel,\n      iconSize,\n      iconColor\n    );\n    const withIcon = Boolean(leftIcon || rightIcon);\n    const classes = useStyles(styles, {\n      ...props,\n      withIcon,\n      css: {\n        color: `$${color}`,\n        ...css,\n      },\n    } as any);\n    const elementProps = useElementProps(props, classes.root);\n    const customChildren = (\n      <>\n        {iconLeft} {children} {iconRight}\n      </>\n    );\n    return createElement(as, elementProps, customChildren);\n  }\n);\n\nconst styles = createStyle(Components.Text, {\n  root: {\n    margin: 0,\n\n    variants: {\n      // TODO: adjust typings\n      fontSize: (utils.textSize.__keys as any[]).reduce(\n        (obj, key) => ({ ...obj, [key]: { textSize: key } }),\n        {}\n      ),\n      withIcon: {\n        true: {\n          display: 'inline-flex',\n          gap: '$2',\n        },\n      },\n    },\n\n    defaultVariants: {\n      fontSize: 'base',\n    },\n  },\n});\n\nexport const Text = createPolymorphicComponent<t.TextDef>(_Text);\n"],"names":["_Text","_unstable_createComponent","Components","as","children","iconSize","iconColor","leftIcon","rightIcon","leftIconAriaLabel","rightIconAriaLabel","css","color","props","iconLeft","createIcon","iconRight","classes","useStyles","styles","elementProps","useElementProps","customChildren","jsxs","Fragment","createElement","createStyle","utils.textSize","obj","key","Text","createPolymorphicComponent"],"mappings":"8OAgBA,MAAAA,EAAAC,EAAcC,EAAA,KACD,CAAA,CACV,GAAAC,EAAA,IACM,SAAAC,EACL,SAAAC,EAAA,GACW,UAAAC,EAAA,WACC,SAAAC,EACZ,UAAAC,EACA,kBAAAC,EACA,mBAAAC,EACA,IAAAC,EACA,MAAAC,EAAA,YACQ,GAAAC,CACL,IAAA,CAEH,MAAAC,EAAAC,EAAiBR,EACfE,EACAJ,EACAC,CACA,EAEFU,EAAAD,EAAkBP,EAChBE,EACAL,EACAC,CACA,EAGFW,EAAAC,EAAAC,EAAA,CAAkC,GAAAN,EAC7B,SAFL,GAAAN,GAAAC,GAGE,IAAA,CACK,MAAA,IAAAI,IACQ,GAAAD,CACR,CACL,CAAA,EAEFS,EAAAC,EAAAR,EAAAI,EAAA,IAAA,EACAK,EAAAC,EAAAC,EAAA,CAAA,SAAA,CAEKV,EAAA,IAASV,EAAE,IAASY,CAAE,CAAA,CAAA,EAG3B,OAAAS,gBAAAtB,EAAAiB,EAAAE,CAAA,CAAqD,CAEzD,EAEAH,EAAAO,EAAAxB,EAAA,KAAA,CAA4C,KAAA,CACpC,OAAA,EACI,SAAA,CAEE,SAAAyB,EAAA,OAAA,OAEmC,CAAAC,EAAAC,KAAA,CAAA,GAAAD,EAAA,CAAAC,CAAA,EAAA,CAAA,SAAAA,CAAA,IACS,CAAA,CACjD,EACH,SAAA,CACU,KAAA,CACF,QAAA,cACK,IAAA,IACJ,CACP,CACF,EACF,gBAAA,CAEiB,SAAA,MACL,CACZ,CAEJ,CAAA,EAEOC,EAAAC,EAAA/B,CAAA"}