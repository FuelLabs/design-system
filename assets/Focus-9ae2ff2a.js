import{g as a,j as t,F as i,k as u}from"./system-5118686d.js";import{r as s}from"./index-8db94870.js";import{a as c,b as p}from"./import-b8fa3143.js";const f=a(({children:e})=>{const{onKeyDown:r}=d();if(l(e))return t(i,{children:s.Children.map(e,o=>s.cloneElement(o,u(o.props,{onKeyDown:r})))});throw new Error("Children type not accepted")}),n=a(({children:e,...r})=>t(c,{...r,children:t(f,{children:e})}));function d(){const e=p();return{onKeyDown:o=>{o.key==="ArrowRight"&&e.focusNext(),o.key==="ArrowLeft"&&e.focusPrevious(),o.key==="ArrowUp"&&e.focusNext(),o.key==="ArrowDown"&&e.focusPrevious()}}}function l(e){return typeof e!="boolean"&&typeof e!="string"&&typeof e<"u"&&typeof e!="number"}try{n.displayName="FocusArrowNavigator",n.__docgenInfo={description:"",displayName:"FocusArrowNavigator",props:{as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"any"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"ThemeUtilsCSS"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The contents of the focus scope.",name:"children",required:!1,type:{name:"ReactNode"}}}}}catch{}try{FocusScope.displayName="FocusScope",FocusScope.__docgenInfo={description:`A FocusScope manages focus for its descendants. It supports containing focus inside
the scope, restoring focus to the previously focused element on unmount, and auto
focusing children on mount. It also acts as a container for a programmatic focus
management interface that can be used to move focus forward and back in response
to user events.`,displayName:"FocusScope",props:{}}}catch{}const _={Scope:c,ArrowNavigator:n};export{_ as F};
//# sourceMappingURL=Focus-9ae2ff2a.js.map
