{"version":3,"file":"Spinner-db12658c.js","sources":["../../src/components/Spinner/Spinner.tsx"],"sourcesContent":["import type { ColorKeys, Colors } from '@fuel-ui/css';\nimport { css, darkColors, keyframes, cx } from '@fuel-ui/css';\nimport { createElement, useMemo } from 'react';\n\nimport { _unstable_createComponent } from '../../utils';\n\nimport type * as t from './defs';\n\nimport { Components } from '~/defs';\nimport { useElementProps } from '~/hooks';\nimport { fClass } from '~/utils/css';\n\nexport const Spinner = _unstable_createComponent<t.SpinnerDef>(\n  Components.Spinner,\n  ({ size = 24, color = 'brand', className, ...props }) => {\n    const styles = useMemo(() => getStyles(size, color), [size]);\n    const classes = cx(fClass(Components.Spinner), className, styles());\n    const viewBox = `0 0 ${size} ${size}`;\n    const elementProps = useElementProps(props, {\n      viewBox,\n      className: classes,\n    });\n    return createElement(\n      'svg',\n      elementProps,\n      <>\n        <circle cx={size / 2} cy={size / 2} r={size * 0.4} className=\"bg\" />\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={size * 0.4}\n          className=\"animated\"\n        />\n      </>\n    );\n  }\n);\n\nfunction getStyles(size: number, color: Colors | ColorKeys | string) {\n  const strokeColor = String(\n    darkColors[color] || darkColors[`${color}`] || color\n  );\n\n  const animation = keyframes({\n    '0%': {\n      strokeDashoffset: 0.66 * size,\n      transform: 'rotate(0deg)',\n    },\n    '50%': {\n      strokeDashoffset: 3.14 * size,\n      transform: 'rotate(720deg)',\n    },\n    '100%': {\n      strokeDashoffset: 0.66 * size,\n      transform: 'rotate(1080deg)',\n    },\n  });\n\n  return css({\n    x: 0,\n    y: 0,\n    width: `${size}px`,\n    height: `${size}px`,\n    viewBox: `0 0 ${size} ${size}`,\n\n    'circle.animated': {\n      zIndex: 0,\n      fill: 'transparent',\n      stroke: strokeColor,\n      strokeWidth: size * 0.1,\n      strokeLinecap: 'round',\n      strokeDasharray: 3.14 * size,\n      transformOrigin: `calc(0.5px * ${size}) calc(0.5px * ${size}) 0`,\n      animation: `${animation} 2.2s linear infinite`,\n    },\n\n    'circle.bg': {\n      fill: 'transparent',\n      stroke: '$blackA7',\n      strokeWidth: size * 0.1,\n      strokeLinecap: 'round',\n      strokeDasharray: 3.14 * size,\n    },\n  });\n}\n"],"names":["Spinner","_unstable_createComponent","Components","size","color","className","props","styles","useMemo","getStyles","classes","cx","fClass","viewBox","elementProps","useElementProps","createElement","jsxs","Fragment","jsx","strokeColor","darkColors","animation","keyframes","css"],"mappings":"wLAYO,MAAAA,EAAAC,EAAgBC,EAAA,QACV,CAAA,CAAA,KAAAC,EAAA,GAAA,MAAAC,EAAA,QAAA,UAAAC,EAAA,GAAAC,KAAA,CAET,MAAAC,EAAAC,EAAA,QAAA,IAAAC,EAAAN,EAAAC,CAAA,EAAA,CAAAD,CAAA,CAAA,EACAO,EAAAC,EAAAC,EAAAV,EAAA,OAAA,EAAAG,EAAAE,EAAA,CAAA,EACAM,EAAA,OAAAV,KAAAA,IACAW,EAAAC,EAAAT,EAAA,CAA4C,QAAAO,EAC1C,UAAAH,CACW,CAAA,EAEb,OAAAM,EAAA,cAAO,MACLF,EACAG,EAAAC,EAAA,CAAA,SAAA,CAEEC,EAAA,SAAA,CAAA,GAAAhB,EAAA,EAAA,GAAAA,EAAA,EAAA,EAAAA,EAAA,GAAA,UAAA,IAAA,CAAA,EAAkEgB,EAClE,SAAC,CAAA,GAAAhB,EAAA,EACY,GAAAA,EAAA,EACA,EAAAA,EAAA,GACD,UAAA,UACA,CAAA,CACZ,EAAA,CACF,CACF,CAEJ,EAEA,SAAAM,EAAAN,EAAAC,EAAA,CACE,MAAAgB,EAAA,OAAoBC,EAAAjB,CAAA,GAAAiB,EAAA,GAAAjB,GAAA,GAAAA,CAC6B,EAGjDkB,EAAAC,EAAA,CAA4B,KAAA,CACpB,iBAAA,IAAApB,EACqB,UAAA,cACd,EACb,MAAA,CACO,iBAAA,KAAAA,EACoB,UAAA,gBACd,EACb,OAAA,CACQ,iBAAA,IAAAA,EACmB,UAAA,iBACd,CACb,CAAA,EAGF,OAAAqB,EAAA,CAAW,EAAA,EACN,EAAA,EACA,MAAA,GAAArB,MACO,OAAA,GAAAA,MACC,QAAA,OAAAA,KAAAA,IACa,kBAAA,CAEL,OAAA,EACT,KAAA,cACF,OAAAiB,EACE,YAAAjB,EAAA,GACY,cAAA,QACL,gBAAA,KAAAA,EACS,gBAAA,gBAAAA,mBAAAA,OAC+B,UAAA,GAAAmB,wBACzC,EAChB,YAAA,CAEa,KAAA,cACL,OAAA,WACE,YAAAnB,EAAA,GACY,cAAA,QACL,gBAAA,KAAAA,CACS,CAC1B,CAAA,CAEJ"}