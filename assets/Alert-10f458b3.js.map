{"version":3,"file":"Alert-10f458b3.js","sources":["../../src/components/Alert/styles.ts","../../src/components/Alert/AlertActions.tsx","../../src/components/Alert/AlertButton.tsx","../../src/components/Alert/AlertDescription.tsx","../../src/components/Alert/AlertTitle.tsx","../../src/components/Alert/Alert.tsx"],"sourcesContent":["import { toCamelCase } from '@fuel-ui/css';\n\nimport { Components } from '~/defs';\nimport { createStyle } from '~/hooks';\n\nfunction createVariantStyle(key: string) {\n  const color = '$textInverse';\n  const iconColor = `$${toCamelCase(`intents-${key}-11`)}`;\n  const bg = `$${toCamelCase(`intents-${key}-4`)}`;\n  const border = `1px solid $${toCamelCase(`intents-${key}-6`)}`;\n\n  return {\n    bg,\n    color,\n    border,\n\n    '& .fuel_Heading': {\n      color,\n    },\n\n    '& .fuel_Icon': {\n      color: iconColor,\n    },\n\n    '& .fuel_Button': {\n      p: 0,\n      color,\n      fontWeight: '$normal',\n    },\n  };\n}\n\nconst STATUSES = ['info', 'warning', 'success', 'error'];\n\nexport const styles = createStyle(Components.Alert, {\n  root: {\n    layer: 'layer-card',\n    padding: '$4',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: '$4',\n\n    '.fuel_Alert-content': {\n      flex: 1,\n      gap: '$3',\n    },\n\n    '& .fuel_Heading': {\n      fontWeight: '$normal',\n      textSize: 'lg',\n      margin: 0,\n    },\n\n    variants: {\n      status: {\n        ...STATUSES.reduce((obj, status) => {\n          return {\n            ...obj,\n            [status]: createVariantStyle(status),\n          };\n        }, {}),\n      },\n\n      direction: {\n        column: {\n          '.fuel_Alert-content': {\n            flexDirection: 'column',\n          },\n          '.fuel_Alert-icon': {\n            pt: '5px',\n            alignSelf: 'stretch',\n          },\n        },\n        row: {\n          '.fuel_Alert-content': {\n            flexDirection: 'row',\n          },\n          '.fuel_Alert-icon': {\n            display: 'flex',\n            alignSelf: 'stretch',\n            alignItems: 'center',\n          },\n        },\n      },\n    },\n\n    defaultVariants: {\n      status: 'info',\n      direction: 'column',\n    },\n  },\n  title: {\n    display: 'flex',\n\n    '& h3': {\n      m: 0,\n      fontSize: '$base',\n    },\n  },\n  description: {\n    flex: 1,\n    margin: 0,\n  },\n  actions: {\n    display: 'flex',\n    gap: '$4',\n  },\n  icon: {},\n  content: {},\n  button: {},\n});\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { Children, cloneElement, createElement } from 'react';\n\nimport {\n  _unstable_createComponent,\n  createPolymorphicComponent,\n} from '../../utils';\n\nimport { useAlertProps } from './Alert';\nimport type * as t from './defs';\nimport { styles } from './styles';\n\nimport { Components } from '~/defs';\nimport { useElementProps, useStyles } from '~/hooks';\n\nconst BUTTON_COLORS = {\n  info: 'blue',\n  warning: 'amber',\n  success: 'green',\n  error: 'red',\n};\n\nconst _AlertActions = _unstable_createComponent<t.AlertActionsDef>(\n  Components.AlertActions,\n  ({ as = 'footer', children, ...props }) => {\n    const classes = useStyles(styles);\n    const elementProps = useElementProps(props, classes.actions);\n    const { status = 'info' } = useAlertProps();\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const customChildren = Children.toArray(children).map((child: any) => {\n      if (child?.type?.id === 'AlertButton') {\n        return cloneElement(child, { color: BUTTON_COLORS[status] });\n      }\n      return child;\n    });\n\n    return createElement(as, elementProps, <>{customChildren}</>);\n  }\n);\n\nexport const AlertActions =\n  createPolymorphicComponent<t.AlertActionsDef>(_AlertActions);\n\nAlertActions.id = 'AlertActions';\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport {\n  _unstable_createComponent,\n  createPolymorphicComponent,\n} from '../../utils';\nimport { Button } from '../Button';\n\nimport type * as t from './defs';\nimport { styles } from './styles';\n\nimport { Components } from '~/defs';\nimport { useElementProps, useStyles } from '~/hooks';\n\nconst _AlertButton = _unstable_createComponent<t.AlertButtonDef>(\n  Components.AlertButton,\n  ({ children, ...props }) => {\n    const classes = useStyles(styles);\n    const elementProps = useElementProps(props, classes.button);\n\n    return (\n      <Button {...elementProps} variant=\"link\">\n        {children}\n      </Button>\n    );\n  }\n);\n\nexport const AlertButton =\n  createPolymorphicComponent<t.AlertButtonDef>(_AlertButton);\n\nAlertButton.id = 'AlertButton';\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { createElement } from 'react';\n\nimport {\n  _unstable_createComponent,\n  createPolymorphicComponent,\n} from '../../utils';\n\nimport type * as t from './defs';\nimport { styles } from './styles';\n\nimport { Components } from '~/defs';\nimport { useElementProps, useStyles } from '~/hooks';\n\nconst _AlertDescription = _unstable_createComponent<t.AlertDescriptionDef>(\n  Components.AlertDescription,\n  ({ as = 'p', ...props }) => {\n    const classes = useStyles(styles);\n    const elementProps = useElementProps(props, classes.description);\n    return createElement(as, elementProps);\n  }\n);\n\nexport const AlertDescription =\n  createPolymorphicComponent<t.AlertDescriptionDef>(_AlertDescription);\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { createElement } from 'react';\n\nimport {\n  _unstable_createComponent,\n  createPolymorphicComponent,\n} from '../../utils';\nimport { Heading } from '../Heading';\n\nimport type * as t from './defs';\nimport { styles } from './styles';\n\nimport { Components } from '~/defs';\nimport { useStyles, useElementProps } from '~/hooks';\n\nconst _AlertTitle = _unstable_createComponent<t.AlertTitleDef>(\n  Components.AlertTitle,\n  ({ as = 'header', children, ...props }) => {\n    const classes = useStyles(styles);\n    const elementProps = useElementProps(props, classes.title);\n    return createElement(\n      as,\n      elementProps,\n      <Heading as=\"h2\">{children}</Heading>\n    );\n  }\n);\n\nexport const AlertTitle =\n  createPolymorphicComponent<t.AlertTitleDef>(_AlertTitle);\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  Children,\n  cloneElement,\n  createContext,\n  createElement,\n  useContext,\n} from 'react';\n\nimport { _unstable_createComponent } from '../../utils';\nimport { Box } from '../Box';\nimport { Flex } from '../Box/Flex';\nimport type { Icons } from '../Icon';\nimport { Icon } from '../Icon';\n\nimport { AlertActions } from './AlertActions';\nimport { AlertButton } from './AlertButton';\nimport { AlertDescription } from './AlertDescription';\nimport { AlertTitle } from './AlertTitle';\nimport type * as t from './defs';\nimport { styles } from './styles';\n\nimport { Components } from '~/defs';\nimport { useElementProps, useStyles } from '~/hooks';\n\ntype ContextProps = {\n  status?: t.AlertStatus;\n};\n\nconst ctx = createContext<ContextProps>({});\nexport function useAlertProps() {\n  return useContext(ctx);\n}\n\nconst STATUS_ICONS: Record<string, { icon: Icons }> = {\n  info: { icon: 'WarningCircle' },\n  warning: { icon: 'Warning' },\n  success: { icon: 'CheckCircle' },\n  error: { icon: 'XCircle' },\n};\n\nexport const Alert = _unstable_createComponent<t.AlertDef>(\n  Components.Alert,\n  ({ as = 'div', children, ...props }) => {\n    const classes = useStyles(styles, props);\n    const elementProps = useElementProps(props, classes.root);\n    const { status = 'info' } = props;\n\n    const items = Children.toArray(children).map((child: any) => {\n      if (child?.type?.id === 'AlertActions') {\n        return cloneElement(child);\n      }\n      return child;\n    });\n\n    const element = createElement(\n      as,\n      elementProps,\n      <>\n        <Box className={classes.icon.className}>\n          <Icon {...STATUS_ICONS[status]} />\n        </Box>\n        <Flex className={classes.content.className}>{items}</Flex>\n      </>\n    );\n\n    return <ctx.Provider value={{ status }}>{element}</ctx.Provider>;\n  }\n);\n\nAlert.id = 'Alert';\nAlert.Title = AlertTitle;\nAlert.Description = AlertDescription;\nAlert.Actions = AlertActions;\nAlert.Button = AlertButton;\n"],"names":["createVariantStyle","key","color","iconColor","toCamelCase","bg","border","STATUSES","styles","createStyle","Components","obj","status","BUTTON_COLORS","_AlertActions","_unstable_createComponent","as","children","props","classes","useStyles","elementProps","useElementProps","useAlertProps","customChildren","Children","child","_a","cloneElement","createElement","jsx","Fragment","AlertActions","createPolymorphicComponent","_AlertButton","Button","AlertButton","_AlertDescription","AlertDescription","_AlertTitle","Heading","AlertTitle","ctx","createContext","useContext","STATUS_ICONS","Alert","items","element","jsxs","Box","Icon","Flex"],"mappings":"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"}